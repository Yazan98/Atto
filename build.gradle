buildscript {

    ext.kotlin_version = '1.3.31'

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://maven.google.com" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.dcendents:android-maven-gradle-plugin:1.4.1"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
        classpath "io.freefair.gradle:github-plugin:4.1.1"
    }

}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://maven.google.com" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

apply from : "details.gradle"

subprojects {

    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.dcendents.android-maven'
    apply plugin: "io.freefair.github.package-registry-maven-publish"

    android {
        compileSdkVersion 29
        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 29
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        lintOptions {
            abortOnError false
        }
    }

    dependencies {
        implementation "io.reactivex.rxjava2:rxjava:2.2.12"
        implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

        if (!project.name.equals("core") && !project.name.equals("prefs")) {
            implementation project(":core")
        }
    }


    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
//        archives javadocJar
        archives sourcesJar
    }

    group = rootProject.ext.LibraryGroup
    version = rootProject.ext.LibraryVersion

}

group = rootProject.ext.LibraryGroup
version = rootProject.ext.LibraryVersion

task clean(type: Delete) {
    delete rootProject.buildDir
}
